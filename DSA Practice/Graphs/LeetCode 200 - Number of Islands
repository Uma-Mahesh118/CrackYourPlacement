class Solution {
public:
    int count =0;
    void deleteThisIsland(vector<vector<char>>& grid, int i, int j){
        queue<pair<int, int>> q;
        q.push({i,j});
        grid[i][j]='0';
        vector<pair<int, int>> directions = { {-1, 0}, {0, -1}, {0, 1}, {1, 0} };

        while(!q.empty()){
            auto [i, j] = q.front();
            q.pop();
            for (auto dir : directions) {
                int ni = i+ dir.first;
                int nj = j+ dir.second;

                if (ni >= 0 && ni < grid.size() && nj >= 0 && nj < grid[0].size() && grid[ni][nj] == '1') {
                    q.push({ni, nj});
                    grid[ni][nj] = '0'; 
                }
            }
        } 
    }
    int numIslands(vector<vector<char>>& grid) {
        for(int i=0; i<grid.size(); i++){
            for(int j=0; j<grid[0].size(); j++){
                if(grid[i][j]=='1') {
                    count++;
                    deleteThisIsland(grid, i, j);
                }
            }
        }
        return count;
    }
};
