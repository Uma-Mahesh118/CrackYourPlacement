class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        priority_queue <long long, vector<long long>, greater<long long>> pq;
        queue<TreeNode *> q;
        q.push(root);
        q.push(NULL); 

        long long ans = 0;
        while(!q.empty()) {
            TreeNode* t = q.front();
            q.pop();
            if(t) {
                ans+= (long long)t->val;
                if(t->left)  q.push(t->left);
                if(t->right)    q.push(t->right);
            }
            else {
                 pq.push(ans);
                if(pq.size() == k+1) 
                    pq.pop();
                ans =0;
                if(!q.empty()) q.push(NULL);
            }
        }
        if(pq.size() < k) return -1;
        return pq.top();
    }
};
